@model UserCrudApp.Data.UserDetail

@{
    ViewBag.Title = "Edit";
    Layout = null;
}
@Scripts.Render("~/bundles/jqueryval")

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.UserName, new { @placeholder = "User Name", @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.EmailId, new { @placeholder = "Email Id", @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Password, new { @placeholder = "Password", @class = "form-control", @required = "required",@type="password" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.MobileNo, new { @placeholder = "Mobile No", @class = "form-control", @onkeypress = "OnlyNumeric()", MaxLength = "10", MinLength = "10", @required = "required" })
                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-5 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" style="margin-right:10px !important" />@Html.ActionLink("Back to List", "Index", null, new { @class = "btn  btn-default" })
            </div>
        </div>
    </div>
}
<script>
    function OnlyNumeric() {
        if (event.which != 8 && event.which != 0 && ((event.which < 48 || event.which > 57) && event.which != 46 && event.which != 43 && event.which != 45))
            event.returnValue = false;
    }
</script>